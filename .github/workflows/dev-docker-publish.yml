name: Dev build and publish Docker distributions to Github Container Registry ghcr.io

on:
  push:
    branches-ignore:
      - master
      - version-*
      - dependabot**
    paths-ignore:
      - README.md


jobs:
  prebuild-job:
    name: Prebuild Job
    runs-on: ubuntu-20.04
    outputs:
      version: ${{ steps.release_ver.outputs.value }}
      versionNumber: ${{ steps.ver.outputs.release_version }}
  docker-push:
    name: Docker build and push
    needs: [prebuild-job]
    runs-on: ubuntu-20.04
    steps:
      # Build and publish image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - run: echo "::set-output name=REPOSITORY_NAME::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
        id: meta
      - name: Generate .proto description json
        id: proto_json
        run: |
          gradle generateServiceDescriptions
          echo "::set-output name=DESCRIPTION_JSON::$(cat serviceProtoDescription)"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          build-args: |
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
            GITHUB_ACTOR=${{ github.actor }}
          tags: ghcr.io/${{ github.repository }}:${{ needs.prebuild-job.outputs.version }}
          labels: |
            com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ needs.prebuild-job.outputs.versionNumber }}
            protobuf-description-base64=${{ steps.proto_json.outputs.DESCRIPTION_JSON }}
  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    if: true
    needs: [docker-push, prebuild-job]
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/${{ github.repository }}:${{ needs.prebuild-job.outputs.version }}

